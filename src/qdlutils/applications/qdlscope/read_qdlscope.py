import h5py
from tkinter import filedialog
import matplotlib.pyplot as plt

class readQDLScope:
    """
    A class to read and analyze HDF5 files generated by qdlscope.
    Attributes
    ----------
    filename : str
        The path to the HDF5 file.
    data : h5py.File
        The HDF5 file object.
    intensity : numpy.ndarray
        The intensity data from the HDF5 file in c/s.
    timestamps : numpy.ndarray
        The timestamps corresponding to the intensity data in s.
    total_time : float
        The total measurement time in s.
    integration_time : float
        The integration time for each sample in s.
    Methods
    -------
    plotIntensity():
        Plots the intensity data against time.
    """
    def __init__(self):
        file_path = filedialog.askopenfilename(filetypes=[("HDF5 files", "*.hdf5")])

        if not file_path:
            raise ValueError("No file selected")

        if not file_path.endswith('.hdf5'):
            raise ValueError("Selected file is not an HDF5 file")
        
        self.filename = file_path
        self.data = h5py.File(file_path, 'r')
        self.intensity = self.data['data']['intensity'][:]
        self.timestamps = self.data['data']['sample_timestamps'][:]
        self.total_time = self.data['data']['total_measurement_time'][()]
        self.integration_time = self.data['scan_settings']['sample_time'][()]
        self.data.close()

    def plotIntensity(self):
        plt.plot(self.timestamps, self.intensity)
        plt.xlabel('Time (s)')
        plt.ylabel('Intensity (c/s)')
        plt.title('Intensity vs Time (Integration time = {}s)'.format(self.integration_time))
        plt.show()

if __name__ == "__main__":
    dat = readQDLScope()
    dat.plotIntensity()
